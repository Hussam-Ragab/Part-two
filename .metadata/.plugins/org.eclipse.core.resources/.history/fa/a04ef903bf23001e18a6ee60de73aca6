
/*
 * You are designing a poster which prints out numbers with a unique
   style applied to each of them. The styling is based on the number of
   closed paths or holes present in a giver number. The number of holes
   that each of the digits from 0 to 9 have are equal to the number of closed
   paths in the digit. Their values are:
    • 1, 2, 3, 5 and 7 = 0 holes.
    • 0, 4, 6, and 9 = 1 hole.
    • 8 = 2 holes.
   Given a number, you must determine the sum of the number of holes for
   all of its digits. For example, the number 819 has 3 holes.
   Function Description
   Complete the function countHoles. The function must return an integer
   denoting the total number of holes in num.
 *
 * */

#include <stdio.h>

int Holes_Number(int num);

int main(void)
{
	int number, Holes;
	printf("enter number\n");
	fflush(stdout);
	scanf("%d",&number);

	Holes = Holes_Number(number);

	printf("Number of Holes = %d\n",Holes);

	return 0;


}

int Holes_Number(int num)
{
	int remainder,hole = 0;
	while(num != 0)
	{

		remainder = num%10;
		num = num/10;
		switch(remainder)
		{
		case 0:
		case 4:
		case 6:
		case 9:
			++hole;
			break;
		case 8:
			hole =hole + 2;
			break;
		}
	}

	return hole;

}
